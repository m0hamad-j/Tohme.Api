// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Tohme.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230829111827_AddDumbbels")]
    partial class AddDumbbels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Tohme.Domain.Entities.Dumbbell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GymId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.ToTable("Dumbbells");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Protein", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GymId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.ToTable("Proteins");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GymId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GymId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Dumbbell", b =>
                {
                    b.HasOne("Tohme.Domain.Entities.Gym", null)
                        .WithMany("Dumbbells")
                        .HasForeignKey("GymId");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Protein", b =>
                {
                    b.HasOne("Tohme.Domain.Entities.Gym", null)
                        .WithMany("Proteines")
                        .HasForeignKey("GymId");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Trainee", b =>
                {
                    b.HasOne("Tohme.Domain.Entities.Gym", null)
                        .WithMany("Trainees")
                        .HasForeignKey("GymId");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Trainer", b =>
                {
                    b.HasOne("Tohme.Domain.Entities.Gym", null)
                        .WithMany("Trainers")
                        .HasForeignKey("GymId");
                });

            modelBuilder.Entity("Tohme.Domain.Entities.Gym", b =>
                {
                    b.Navigation("Dumbbells");

                    b.Navigation("Proteines");

                    b.Navigation("Trainees");

                    b.Navigation("Trainers");
                });
#pragma warning restore 612, 618
        }
    }
}
